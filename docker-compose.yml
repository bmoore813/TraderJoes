version: '3.7'
services:
  test-pydvtd:
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    image: test-pydvtd
    depends_on:
      - mlflow
    env_file:
      - .env
    volumes:
      - my-mlflow-volume:/${MLFLOW_ARTIFACT_STORE}:z
    entrypoint:
      [
        "python",
        "-m",
        "pytest",
        "-p",
        "no:warnings",
        "--tb=auto",
        "-vv",
        "tests",
        "-ra"
      ]
  mlflow:
    env_file:
      - .env
    build:
      context: ../mlflow/docker
      dockerfile: Dockerfile
    image: mlflow
    expose:
      - "${MLFLOW_TRACKING_SERVER_PORT}"
    ports:
      - "${MLFLOW_TRACKING_SERVER_PORT}:${MLFLOW_TRACKING_SERVER_PORT}"
    depends_on:
      - postgres
    volumes:
      - my-mlflow-volume:/${MLFLOW_ARTIFACT_STORE}:z
    entrypoint:
      [
        "mlflow",
        "server",
        "--backend-store-uri",
        "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${MLFLOW_BACKEND_STORE}:${POSTGRES_PORT}/${POSTGRES_DATABASE}",
        "--default-artifact-root",
        "/${MLFLOW_ARTIFACT_STORE}",
        "--host",
        "${MLFLOW_TRACKING_SERVER_HOST}",
        "--port",
        "${MLFLOW_TRACKING_SERVER_PORT}"
      ]
  postgres:
    env_file:
      - .env
    build:
      context: ./docker/postgres
      dockerfile: Dockerfile
    image: postgres
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - my-postgres-volume:/var/lib/postgresql/data:z

volumes:
  my-postgres-volume:
    external: false
  my-mlflow-volume:
    external: false
